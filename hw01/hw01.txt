Считаю, что для реализации домашней CRM стоит взять клиент/серверную архитектуру, так как в 
первую очередь проект не является обширной системой, а “клиент/сервер” прост для реализации(имхо), 
к тому же нанять разработчиков, которые знакомы с этой архитектурой, проще и дешевле. DDD скорее брать 
не стоит, так как опять же проект у нас небольшой, а значит траты на разработку языка предметной 
области будут излишними. Что касаемо многослойной архитектуры, считаю, что она тоже не подходит, так как
опять проект небольшой, а значит и бюджет тоже, то есть мы будем нанимать разработчиков по дешевле, которые
скорее всего не знакомы с такой архитектурой, либо имеют не достаточный опыт. Собственно по тем же 
причинам(размер проекта и небольшой бюджет) не подойдут и микро-сервисы, SOA, шина сообщений. Кстати, 
последние три архитектуры показались мне синонимичными. В перспективе, при рости продукта, думаю стоит 
смотреть в сторону микро-сервисов, так данный подход сейчас популярен и опять же будет проще найти 
разработчиков знакомыми с такой архитектурой.